[Integer : (1,1) : "1"]
[FwdSlash : (1,2) : "/"]
[Integer : (1,3) : "5"]
[EqualEqual : (2,2) : "=="]
[Plus : (2,4) : "+"]
[OpenBrace : (2,6) : "("]
[If : (2,9) : "if"]
[Do : (2,13) : "do"]
[LesserGreater : (3,2) : "<>"]
[Minus : (3,4) : "-"]
[CloseBrace : (3,6) : ")"]
[Then : (3,11) : "then"]
[End : (3,15) : "end"]
[Lesser : (4,1) : "<"]
[Asterix : (4,3) : "*"]
[OpenCurlyBrace : (4,5) : "{"]
[Else : (4,10) : "else"]
[Public : (4,17) : "public"]
[Greater : (5,1) : ">"]
[FwdSlash : (5,3) : "/"]
[CloseCurlyBrace : (5,5) : "}"]
[While : (5,11) : "while"]
[Private : (5,19) : "private"]
[LesserEqual : (6,2) : "<="]
[Equal : (6,4) : "="]
[OpenSquareBrace : (6,6) : "["]
[Class : (6,12) : "class"]
[Or : (6,15) : "or"]
[GreaterEqual : (7,2) : ">="]
[CloseSquareBrace : (7,5) : "]"]
[Integer : (7,13) : "integer"]
[And : (7,17) : "and"]
[SemiColon : (8,1) : ";"]
[Float : (8,9) : "float"]
[Not : (8,13) : "not"]
[Comma : (9,1) : ","]
[Read : (9,8) : "read"]
[Inherits : (9,17) : "inherits"]
[Period : (10,1) : "."]
[Write : (10,9) : "write"]
[Local : (10,15) : "local"]
[Colon : (11,1) : ":"]
[Return : (11,10) : "return"]
[ColonColon : (12,2) : "::"]
[Main : (12,9) : "main"]
[Integer : (14,1) : "0"]
[Integer : (15,1) : "1"]
[Integer : (16,2) : "10"]
[Integer : (17,2) : "12"]
[Integer : (18,3) : "123"]
[Integer : (19,5) : "12345"]
[Float : (21,4) : "1.23"]
[Float : (22,5) : "12.34"]
[Integer : (23,10) : "10"]
[Float : (24,15) : "12345.6789e-123"]
[Identifier : (26,3) : "abc"]
[Identifier : (27,4) : "abc1"]
[Identifier : (28,4) : "a1bc"]
[Identifier : (29,8) : "abc_1abc"]
[Identifier : (30,13) : "abc1_abc_1abc"]
[BlockComment : (32,41) : "/* this is a single line block comment */"]
[BlockComment : (37,2) : "/* this is a 
multiple line
block comment 
*/"]
[Comment : (40,0) : "// this is an inline comment"]
[EOF : (42,1) : ""]
