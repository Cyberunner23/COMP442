[Class : (1,1) : "class"]
[Identifier : (1,7) : "C1"]
[OpenCurlyBrace : (1,10) : "{"]
[Public : (2,2) : "public"]
[Float : (2,9) : "float"]
[Identifier : (2,15) : "a"]
[SemiColon : (2,16) : ";"]
[Public : (3,2) : "public"]
[Integer : (3,9) : "integer"]
[Identifier : (3,17) : "b"]
[OpenSquareBrace : (3,18) : "["]
[IntNum : (3,19) : "5"]
[CloseSquareBrace : (3,20) : "]"]
[SemiColon : (3,21) : ";"]
[Public : (4,2) : "public"]
[Integer : (4,9) : "integer"]
[Identifier : (4,17) : "c"]
[SemiColon : (4,18) : ";"]
[Public : (6,2) : "public"]
[Identifier : (6,9) : "func1"]
[OpenBrace : (6,14) : "("]
[Integer : (6,15) : "integer"]
[Identifier : (6,23) : "input"]
[CloseBrace : (6,28) : ")"]
[Colon : (6,30) : ":"]
[Integer : (6,32) : "integer"]
[SemiColon : (6,39) : ";"]
[CloseCurlyBrace : (7,1) : "}"]
[SemiColon : (7,2) : ";"]
[Class : (9,1) : "class"]
[Identifier : (9,7) : "C2"]
[Inherits : (9,10) : "inherits"]
[Identifier : (9,19) : "C1"]
[OpenCurlyBrace : (9,22) : "{"]
[Public : (10,2) : "public"]
[Integer : (10,9) : "integer"]
[Identifier : (10,17) : "x"]
[SemiColon : (10,18) : ";"]
[Public : (11,2) : "public"]
[Integer : (11,9) : "integer"]
[Identifier : (11,17) : "y"]
[OpenSquareBrace : (11,18) : "["]
[IntNum : (11,19) : "5"]
[CloseSquareBrace : (11,20) : "]"]
[SemiColon : (11,21) : ";"]
[Public : (12,2) : "public"]
[Identifier : (12,9) : "C1"]
[Identifier : (12,12) : "d"]
[OpenSquareBrace : (12,13) : "["]
[IntNum : (12,14) : "5"]
[CloseSquareBrace : (12,15) : "]"]
[SemiColon : (12,16) : ";"]
[Public : (14,2) : "public"]
[Identifier : (14,9) : "func2"]
[OpenBrace : (14,14) : "("]
[Integer : (14,15) : "integer"]
[Identifier : (14,23) : "in2"]
[CloseBrace : (14,26) : ")"]
[Colon : (14,28) : ":"]
[Identifier : (14,30) : "C1"]
[SemiColon : (14,32) : ";"]
[CloseCurlyBrace : (15,1) : "}"]
[SemiColon : (15,2) : ";"]
[Identifier : (17,1) : "C1"]
[ColonColon : (17,3) : "::"]
[Identifier : (17,5) : "func1"]
[OpenBrace : (17,10) : "("]
[Integer : (17,11) : "integer"]
[Identifier : (17,19) : "input"]
[CloseBrace : (17,24) : ")"]
[Colon : (17,26) : ":"]
[Integer : (17,28) : "integer"]
[Local : (18,3) : "local"]
[Integer : (19,5) : "integer"]
[Identifier : (19,13) : "result"]
[SemiColon : (19,19) : ";"]
[Do : (20,3) : "do"]
[Identifier : (21,5) : "result"]
[Equal : (21,12) : "="]
[Identifier : (21,14) : "input"]
[Plus : (21,20) : "+"]
[IntNum : (21,22) : "10"]
[SemiColon : (21,24) : ";"]
[Return : (22,5) : "return"]
[OpenBrace : (22,12) : "("]
[Identifier : (22,13) : "result"]
[CloseBrace : (22,19) : ")"]
[SemiColon : (22,20) : ";"]
[End : (23,3) : "end"]
[SemiColon : (23,6) : ";"]
[Identifier : (25,1) : "C2"]
[ColonColon : (25,3) : "::"]
[Identifier : (25,5) : "func2"]
[OpenBrace : (25,10) : "("]
[Integer : (25,11) : "integer"]
[Identifier : (25,19) : "in2"]
[CloseBrace : (25,22) : ")"]
[Colon : (25,24) : ":"]
[Identifier : (25,26) : "C1"]
[Local : (26,3) : "local"]
[Identifier : (27,5) : "C1"]
[Identifier : (27,8) : "result"]
[SemiColon : (27,14) : ";"]
[Do : (28,3) : "do"]
[Identifier : (29,5) : "result"]
[Period : (29,11) : "."]
[Identifier : (29,12) : "c"]
[Equal : (29,14) : "="]
[Identifier : (29,16) : "in2"]
[SemiColon : (29,19) : ";"]
[Return : (30,2) : "return"]
[OpenBrace : (30,9) : "("]
[Identifier : (30,10) : "result"]
[CloseBrace : (30,16) : ")"]
[SemiColon : (30,17) : ";"]
[End : (31,3) : "end"]
[SemiColon : (31,6) : ";"]
[Identifier : (33,1) : "squared"]
[OpenBrace : (33,8) : "("]
[Integer : (33,9) : "integer"]
[Identifier : (33,17) : "a"]
[CloseBrace : (33,18) : ")"]
[Colon : (33,20) : ":"]
[Integer : (33,22) : "integer"]
[Local : (34,3) : "local"]
[Do : (35,3) : "do"]
[Return : (36,2) : "return"]
[OpenBrace : (36,9) : "("]
[Identifier : (36,10) : "a"]
[Asterix : (36,12) : "*"]
[Identifier : (36,14) : "a"]
[CloseBrace : (36,15) : ")"]
[SemiColon : (36,16) : ";"]
[End : (37,3) : "end"]
[SemiColon : (37,6) : ";"]
[Main : (39,1) : "main"]
[Local : (40,3) : "local"]
[Integer : (41,5) : "integer"]
[Identifier : (41,13) : "h"]
[SemiColon : (41,14) : ";"]
[Integer : (42,2) : "integer"]
[Identifier : (42,10) : "i"]
[OpenSquareBrace : (42,11) : "["]
[IntNum : (42,12) : "5"]
[CloseSquareBrace : (42,13) : "]"]
[OpenSquareBrace : (42,14) : "["]
[IntNum : (42,15) : "5"]
[CloseSquareBrace : (42,16) : "]"]
[SemiColon : (42,17) : ";"]
[Identifier : (43,2) : "C1"]
[Identifier : (43,5) : "k"]
[SemiColon : (43,6) : ";"]
[Identifier : (44,2) : "C2"]
[Identifier : (44,5) : "j"]
[SemiColon : (44,6) : ";"]
[Identifier : (45,2) : "C1"]
[Identifier : (45,5) : "f"]
[OpenSquareBrace : (45,6) : "["]
[IntNum : (45,7) : "5"]
[CloseSquareBrace : (45,8) : "]"]
[SemiColon : (45,9) : ";"]
[Integer : (46,2) : "integer"]
[Identifier : (46,10) : "v1"]
[SemiColon : (46,12) : ";"]
[Do : (47,3) : "do"]
[Read : (49,2) : "read"]
[OpenBrace : (49,6) : "("]
[Identifier : (49,7) : "h"]
[CloseBrace : (49,8) : ")"]
[SemiColon : (49,9) : ";"]
[Write : (50,2) : "write"]
[OpenBrace : (50,7) : "("]
[Identifier : (50,8) : "h"]
[CloseBrace : (50,9) : ")"]
[SemiColon : (50,10) : ";"]
[Write : (51,2) : "write"]
[OpenBrace : (51,7) : "("]
[IntNum : (51,8) : "10"]
[Plus : (51,11) : "+"]
[IntNum : (51,13) : "10"]
[CloseBrace : (51,15) : ")"]
[SemiColon : (51,16) : ";"]
[Identifier : (53,5) : "i"]
[OpenSquareBrace : (53,6) : "["]
[IntNum : (53,7) : "0"]
[CloseSquareBrace : (53,8) : "]"]
[OpenSquareBrace : (53,9) : "["]
[IntNum : (53,10) : "4"]
[CloseSquareBrace : (53,11) : "]"]
[Equal : (53,13) : "="]
[IntNum : (53,15) : "9"]
[SemiColon : (53,16) : ";"]
[Identifier : (54,5) : "h"]
[Equal : (54,7) : "="]
[OpenBrace : (54,9) : "("]
[IntNum : (54,10) : "5"]
[FwdSlash : (54,12) : "/"]
[IntNum : (54,14) : "5"]
[Plus : (54,16) : "+"]
[Identifier : (54,18) : "squared"]
[OpenBrace : (54,25) : "("]
[IntNum : (54,26) : "2"]
[CloseBrace : (54,27) : ")"]
[Minus : (54,29) : "-"]
[IntNum : (54,31) : "1"]
[CloseBrace : (54,32) : ")"]
[Asterix : (54,34) : "*"]
[Identifier : (54,36) : "squared"]
[OpenBrace : (54,43) : "("]
[IntNum : (54,44) : "3"]
[CloseBrace : (54,45) : ")"]
[Plus : (54,47) : "+"]
[IntNum : (54,49) : "7"]
[Plus : (54,51) : "+"]
[Identifier : (54,53) : "i"]
[OpenSquareBrace : (54,54) : "["]
[IntNum : (54,55) : "0"]
[CloseSquareBrace : (54,56) : "]"]
[OpenSquareBrace : (54,57) : "["]
[IntNum : (54,58) : "2"]
[And : (54,60) : "and"]
[IntNum : (54,64) : "2"]
[Plus : (54,66) : "+"]
[IntNum : (54,68) : "2"]
[CloseSquareBrace : (54,69) : "]"]
[SemiColon : (54,70) : ";"]
[Write : (56,2) : "write"]
[OpenBrace : (56,7) : "("]
[Identifier : (56,8) : "h"]
[CloseBrace : (56,9) : ")"]
[SemiColon : (56,10) : ";"]
[Write : (57,2) : "write"]
[OpenBrace : (57,7) : "("]
[Identifier : (57,8) : "k"]
[Period : (57,9) : "."]
[Identifier : (57,10) : "func1"]
[OpenBrace : (57,15) : "("]
[IntNum : (57,16) : "2"]
[CloseBrace : (57,17) : ")"]
[CloseBrace : (57,18) : ")"]
[SemiColon : (57,19) : ";"]
[Identifier : (59,2) : "k"]
[Period : (59,3) : "."]
[Identifier : (59,4) : "b"]
[OpenSquareBrace : (59,5) : "["]
[IntNum : (59,6) : "2"]
[CloseSquareBrace : (59,7) : "]"]
[Equal : (59,9) : "="]
[IntNum : (59,11) : "321"]
[SemiColon : (59,14) : ";"]
[Write : (60,2) : "write"]
[OpenBrace : (60,7) : "("]
[Identifier : (60,8) : "k"]
[Period : (60,9) : "."]
[Identifier : (60,10) : "b"]
[OpenSquareBrace : (60,11) : "["]
[IntNum : (60,12) : "2"]
[CloseSquareBrace : (60,13) : "]"]
[CloseBrace : (60,14) : ")"]
[SemiColon : (60,15) : ";"]
[Identifier : (62,2) : "k"]
[Period : (62,3) : "."]
[Identifier : (62,4) : "c"]
[Equal : (62,6) : "="]
[IntNum : (62,8) : "778"]
[SemiColon : (62,11) : ";"]
[Write : (63,2) : "write"]
[OpenBrace : (63,7) : "("]
[Identifier : (63,8) : "k"]
[Period : (63,9) : "."]
[Identifier : (63,10) : "c"]
[CloseBrace : (63,11) : ")"]
[SemiColon : (63,12) : ";"]
[Identifier : (65,2) : "j"]
[Period : (65,3) : "."]
[Identifier : (65,4) : "d"]
[OpenSquareBrace : (65,5) : "["]
[IntNum : (65,6) : "1"]
[CloseSquareBrace : (65,7) : "]"]
[Period : (65,8) : "."]
[Identifier : (65,9) : "c"]
[Equal : (65,11) : "="]
[IntNum : (65,13) : "1717"]
[SemiColon : (65,17) : ";"]
[Write : (66,2) : "write"]
[OpenBrace : (66,7) : "("]
[Identifier : (66,8) : "j"]
[Period : (66,9) : "."]
[Identifier : (66,10) : "d"]
[OpenSquareBrace : (66,11) : "["]
[IntNum : (66,12) : "1"]
[CloseSquareBrace : (66,13) : "]"]
[Period : (66,14) : "."]
[Identifier : (66,15) : "c"]
[CloseBrace : (66,16) : ")"]
[SemiColon : (66,17) : ";"]
[Identifier : (68,2) : "j"]
[Period : (68,3) : "."]
[Identifier : (68,4) : "c"]
[Equal : (68,6) : "="]
[IntNum : (68,8) : "7474"]
[SemiColon : (68,12) : ";"]
[Write : (69,2) : "write"]
[OpenBrace : (69,7) : "("]
[Identifier : (69,8) : "j"]
[Period : (69,9) : "."]
[Identifier : (69,10) : "c"]
[CloseBrace : (69,11) : ")"]
[SemiColon : (69,12) : ";"]
[Write : (71,2) : "write"]
[OpenBrace : (71,7) : "("]
[Identifier : (71,8) : "j"]
[Period : (71,9) : "."]
[Identifier : (71,10) : "c"]
[Plus : (71,12) : "+"]
[Identifier : (71,14) : "j"]
[Period : (71,15) : "."]
[Identifier : (71,16) : "d"]
[OpenSquareBrace : (71,17) : "["]
[IntNum : (71,18) : "1"]
[CloseSquareBrace : (71,19) : "]"]
[Period : (71,20) : "."]
[Identifier : (71,21) : "c"]
[CloseBrace : (71,22) : ")"]
[SemiColon : (71,23) : ";"]
[Identifier : (73,2) : "v1"]
[Equal : (73,5) : "="]
[IntNum : (73,7) : "10"]
[SemiColon : (73,9) : ";"]
[While : (74,2) : "while"]
[OpenBrace : (74,8) : "("]
[Identifier : (74,9) : "v1"]
[Greater : (74,12) : ">"]
[IntNum : (74,14) : "0"]
[CloseBrace : (74,15) : ")"]
[Do : (75,2) : "do"]
[If : (77,4) : "if"]
[OpenBrace : (77,7) : "("]
[Identifier : (77,8) : "v1"]
[Greater : (77,11) : ">"]
[IntNum : (77,13) : "5"]
[CloseBrace : (77,14) : ")"]
[Then : (78,4) : "then"]
[Do : (79,4) : "do"]
[Write : (80,6) : "write"]
[OpenBrace : (80,11) : "("]
[IntNum : (80,12) : "1"]
[CloseBrace : (80,13) : ")"]
[SemiColon : (80,14) : ";"]
[End : (81,4) : "end"]
[Else : (82,2) : "else"]
[Do : (83,4) : "do"]
[Write : (84,6) : "write"]
[OpenBrace : (84,11) : "("]
[IntNum : (84,12) : "2"]
[CloseBrace : (84,13) : ")"]
[SemiColon : (84,14) : ";"]
[End : (85,4) : "end"]
[SemiColon : (85,7) : ";"]
[Identifier : (87,4) : "v1"]
[Equal : (87,7) : "="]
[Identifier : (87,9) : "v1"]
[Minus : (87,12) : "-"]
[IntNum : (87,14) : "1"]
[SemiColon : (87,15) : ";"]
[End : (88,2) : "end"]
[SemiColon : (88,5) : ";"]
[End : (90,3) : "end"]
[EOF : (91,1) : ""]
